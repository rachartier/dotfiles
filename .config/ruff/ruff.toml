# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
# Same as Black.
line-length = 88
indent-width = 4
target-version = "py310"

[lint]
# Enable rules that complement rather than overlap with basedpyright
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F401", # unused imports (let basedpyright handle other F rules)
    "F841", # unused variables (let basedpyright handle assignment)
    "I",    # isort
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "PIE",  # flake8-pie
    "SIM",  # flake8-simplify
    "RUF",  # Ruff-specific rules
]

ignore = [
    "E501",    # Line too long
    "F821",    # Undefined name (let basedpyright handle this)
    "F822",    # Undefined name in __all__ (let basedpyright handle this)
    "F823",    # Local variable referenced before assignment (let basedpyright handle this)
    "F401",    # Re-enable if you want Ruff to handle unused imports instead of basedpyright
    "B008",    # Do not perform function calls in argument defaults (can conflict with type checkers)
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
docstring-code-line-length = "dynamic"

