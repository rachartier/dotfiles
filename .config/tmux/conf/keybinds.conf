unbind C-b
set -g prefix ²
bind ² send-prefix

# Use Alt-arrow keys without prefix key to switch panes
# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# set vi-mode
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n M-right if-shell "$is_vim" 'send-keys M-right' 'select-pane -R'
bind-key -n M-left if-shell "$is_vim" 'send-keys M-left' 'select-pane -L'
bind-key -n M-up if-shell "$is_vim" 'send-keys M-up' 'select-pane -U'
bind-key -n M-down if-shell "$is_vim" 'send-keys M-down' 'select-pane -D'

bind-key -T copy-mode-vi 'M-left' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-down' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-up' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-right' if -F '#{pane_at_right}' '' 'select-pane -R'

bind-key -n M-h if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind-key -n M-j if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind-key -n M-k if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind-key -n M-l if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

bind-key -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# keybindings
bind-key -n M-v copy-mode
bind-key -n M-V copy-mode

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

bind-key -n M-V split-window -v -c "#{pane_current_path}"
bind-key -n M-H split-window -h -c "#{pane_current_path}"
bind-key -n M-f resize-pane -Z
bind-key -n M-X kill-pane

bind-key -n M-s display-popup -E "tmux list-sessions -F '#{session_name}' |\
    "$HOME/.fzf/bin/fzf" --reverse --height 100% --preview ''  |\
    xargs -d '\n' tmux switch-client -t"

bind-key -n M-P display-popup -E "$HOME/.config/scripts/fzf_tmuxp.sh"
bind-key -n M-p display-popup -E "$HOME/.config/scripts/cd-projects.sh"
bind-key -n M-S display-popup -E "$HOME/.config/scripts/fzf_ssh_host.sh"
bind-key -n M-t display-popup -E "$HOME/.config/scripts/fzf_theme.sh"

bind-key -n M-g popup -d '#{pane_current_path}' -E -w 90% -h 90% "COLORTERM=truecolor lazygit" # Fix lazygit not working with tmux
bind-key -n M-G popup -d '#{pane_current_path}' -E -w 90% -h 90% "COLORTERM=truecolor lazygit --work-tree=$HOME --git-dir=$HOME/.cfg"

# bind-key -n M-g popup -d '#{pane_current_path}' -E -w 90% -h 90% "lazygit" # Fix lazygit not working with tmux
# bind-key -n M-G popup -d '#{pane_current_path}' -E -w 90% -h 90% "lazygit --work-tree=$HOME --git-dir=$HOME/.cfg"

bind-key -n M-d popup -E -w 90% -h 90% lazydocker

bind k confirm kill-window
bind K confirm kill-server
bind < resize-pane -L 5
bind > resize-pane -R 5
bind - resize-pane -D 5
bind + resize-pane -U 5
bind . command-prompt
bind a last-window
bind space command-prompt -p index "select-window"
bind r source-file $HOME/.config/tmux/tmux.conf

# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"
# bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"
# bind-key -r t if-shell -F '#{==:#{session_name},scratch}' {
#     detach-client
# } {
#     display-popup -d "#{pane_current_path}" -xC -yC -w 80% -h 80% -E 'tmux attach-session -t scratch || tmux new-session -s scratch'
# }
